name: Build_Check
# check if OH6022 builds on some recent operating systems

on: [push]

env:
  # CMake build type (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_check:
    strategy:
      # do not stop on 1st fail
      fail-fast: false
      matrix:
        # ubuntu-16.04 is too old for our CMake
        os: [ubuntu-20.04, ubuntu-18.04, macos-10.15]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Build Requirements
      run:
        git submodule update --init --recursive;
        mkdir build;
        sudo apt install g++ make cmake fakeroot rpm qttools5-dev libfftw3-dev binutils-dev libusb-1.0-0-dev libqt5opengl5-dev mesa-common-dev libgl1-mesa-dev libgles2-mesa-dev
	cd build;
	cp ../CHANGELOG changelog;
	cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      if: startsWith(matrix.os, 'ubuntu')

      run: 
        git submodule update --init --recursive;
	mkdir build;
	brew update;
        brew install qt5 fftw binutils create-dmg;
        export CMAKE_PREFIX_PATH=$(brew --prefix qt5);
	cd build;
	cp ../CHANGELOG changelog;
	cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}
      if: startsWith(matrix.os, 'macos')
      
      run: 
        set qtpath64="C:\Qt\5.15\msvc2019_64" &
        md build &
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat" &
        cmake -G "Visual Studio 16 2019" -A x64 -DCMAKE_PREFIX_PATH=%qtpath64% -DCMAKE_BUILD_TYPE=Release -Bbuild -H.
      if: startsWith(matrix.os, 'windows')

    - name: Build
      working-directory: ${{github.workspace}}/build

      # Now build the binary
      run:
        make -j4;
	fakeroot make -j4 package
      if: startsWith(matrix.os, 'ubuntu')
	
      run:
        make -j4;
        fakeroot make -j4 package
      if: startsWith(matrix.os, 'macos')
      
      run:
        cmake --build build --config Release --target package
      if: startsWith(matrix.os, 'windows')


    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        # create a zip file openhantek_ubuntu-xx.xx_nn.zip
        name: openhantek_ubuntu_${{github.run_number}}.zip
        path: ${{github.workspace}}/build/packages/
      if: startsWith(matrix.os, 'ubuntu')

      with:
        # create a zip file openhantek_ubuntu-xx.xx_nn.zip
        name: openhantek_osx_x86_64_${{github.run_number}}
        path: ${{github.workspace}}/build/packages/
      if: startsWith(matrix.os, 'macos')

      with:
        # create a zip file openhantek_ubuntu-xx.xx_nn.zip
        name: OpenHantek_Win_x64_Release_${{github.run_number}}
        path: ${{github.workspace}}/build/openhantek/Release
      if: startsWith(matrix.os, 'windows')
